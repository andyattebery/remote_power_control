#!/usr/bin/env sh

# Dependencies
# - curl
# - wakeonlan

# Resources
# - Variable null or empty checking: https://stackoverflow.com/a/13864829

# Config
ENV_FILE_PATH=/etc/remote_power_control/env

usage() {
    echo "remote_power_control <type> <...>"
    echo "Supported types: homeassistant, pikvm, wakeonlan (only supports 'on' action)"
    echo "Supported actions: on, off"
    echo
    echo "Type usages:"
    echo "  remote_power_control homeassistant <action> <switch_entity_id> [<homeassistant_base_url>] [<homeassistant_access_token>]"
    echo "  remote_power_control pikvm <action> [<pikvm_url>] [<pikvm_username>] [<pikvm_password>]"
    echo "  remote_power_control wakeonlan <mac_address>"
    echo
    echo "ENV variables (optionally set in $ENV_FILE_PATH) can also be set instead of optional parameters:"
    echo "  - REMOTE_POWER_CONTROL_PIKVM_URL"
    echo "  - REMOTE_POWER_CONTROL_PIKVM_USERNAME"
    echo "  - REMOTE_POWER_CONTROL_PIKVM_PASSWORD"
    echo "  - REMOTE_POWER_CONTROL_HOMEASSISTANT_URL"
    echo "  - REMOTE_POWER_CONTROL_HOMEASSISTANT_ACCESS_TOKEN"
}

homeassistant_switch() {
    action=${1:?"<action> not specified"}
    homeassistant_switch_entity_id=${2:?"<switch_entity_id> not specified"}

    homeassistant_url=${3:-${REMOTE_POWER_CONTROL_HOMEASSISTANT_URL}}
    homeassistant_access_token=${4:-${REMOTE_POWER_CONTROL_HOMEASSISTANT_ACCESS_TOKEN}}

    : ${homeassistant_url:?"<homeassistant_url> parameter or REMOTE_POWER_CONTROL_HOMEASSISTANT_URL is not set"}
    : ${homeassistant_access_token:?"<homeassistant_access_token> parameter or REMOTE_POWER_CONTROL_HOMEASSISTANT_ACCESS_TOKEN is not set"}

    # echo $action
    # echo $homeassistant_switch_entity_id
    # echo $homeassistant_url
    # echo $homeassistant_access_token

    if [ $action = 'on' ]; then
        homeassistant_action_url_part='turn_on'
    elif [ $action = 'off' ]; then
        homeassistant_action_url_part='turn_off'
    else
        echo "$action is not valid."
    fi

    homeassistant_post_data="{\"entity_id\": \"$homeassistant_switch_entity_id\"}"

    echo "Powering $action via Home Assistant..."

    /usr/bin/curl \
    --no-progress-meter \
    --header "Authorization: Bearer $homeassistant_access_token" \
    --header "Content-Type application/json" \
    --data "$homeassistant_post_data" \
    --request POST \
    "$homeassistant_url:8123/api/services/switch/$homeassistant_action_url_part"
}

pikvm_atx() {
    action=${1:?action not specified}

    pikvm_url=${2:-${REMOTE_POWER_CONTROL_PIKVM_URL}}
    pikvm_username=${3:-${REMOTE_POWER_CONTROL_PIKVM_USERNAME}}
    pikvm_password=${4:-${REMOTE_POWER_CONTROL_PIKVM_PASSWORD}}

    : ${pikvm_url:?"<pikvm_url> parameter or REMOTE_POWER_CONTROL_PIKVM_URL is not set"}
    : ${pikvm_username:?"<pikvm_username> parameter or REMOTE_POWER_CONTROL_PIKVM_USERNAME is not set"}
    : ${pikvm_password:?"<pikvm_password> parameter or REMOTE_POWER_CONTROL_PIKVM_PASSWORD is not set"}

    # echo $action
    # echo $pikvm_url
    # echo $pikvm_username
    # echo $pikvm_password

    if [ $action = 'on' ]; then
        power_action='on'
    elif [ $action = 'off' ]; then
        power_action='off'
    else
        echo "$action is not valid."
    fi

    echo "Powering $action via PiKVM ATX..."

    /usr/bin/curl \
    --no-progress-meter \
    --header "X-KVMD-User:$pikvm_username" \
    --header "X-KVMD-Passwd:$pikvm_password" \
    --request POST \
    "$pikvm_url/api/atx/power?action=$power_action"
}

wake_on_lan() {
    mac_address=$1

    echo "Powering on via wake-on-LAN..."
    /usr/bin/wakeonlan $mac_address
}

post_power_on_sleep() {
    sleep_in_seconds=${REMOTE_POWER_CONTROL_POST_POWER_ON_SLEEP_IN_SECONDS:-"240"} # 4 minutes

    echo "Sleeping for $sleep_in_seconds seconds..."
    sleep "$sleep_in_seconds"
}

if [ -e $ENV_FILE_PATH ]; then
    . $ENV_FILE_PATH
fi

type=$1

case $type in
    "homeassistant")
        homeassistant_switch $2 $3 $4 $5 # <action>, <entity, url, access_token
        ;;
    "pikvm")
        pikvm_atx $2 $3 $4 $5 # <action> [<pikvm_url>] [<pikvm_username>] [<pikvm_password>]
        ;;
    "wakeonlan")
        wake_on_lan $2
        ;;
    *)
        usage
        ;;
esac

if [ $type = 'wakeonlan' ] || [ $action = 'on' ]; then
    post_power_on_sleep
fi
